<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.saintgobain.dsi.pcpeg</groupId>
	<artifactId>pcpeg</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>[Saint-Gobain] Pcpeg</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<organization>
		<name>Saint Gobain</name>
		<url>http://www.saint-gobain.fr/</url>
	</organization>

	<scm>
		<connection>scm:git:git@gitlab:delivery/pcpeg.git</connection>
		<developerConnection>scm:git:git@gitlab:delivery/pcpeg.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://gitlab/delivery/pcpeg</url>
	</scm>

	<ciManagement>
		<system>jenkins</system>
		<url>http://jenkins:8080/</url>
	</ciManagement>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Nexus Releases</name>
			<url>https://bishop.digital-solutions.saint-gobain.com/repository/maven-releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Nexus Snapshots</name>
			<url>https://bishop.digital-solutions.saint-gobain.com/repository/maven-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<saint-gobain.version>1.5.4</saint-gobain.version>
		<spring-cloud.version>Hoxton.SR8</spring-cloud.version>
		<spring-boot-admin-starter-client.version>2.1.6</spring-boot-admin-starter-client.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>

		<apache-poi.version> 4.0.1 </apache-poi.version>
		<apache-poi-ooxml.version>3.17 </apache-poi-ooxml.version>

		<!-- Plugin version -->
        <swagger-maven-plugin.version>3.1.6</swagger-maven-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <git-commit-id-plugin.version>2.2.6</git-commit-id-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M4</maven-failsafe-plugin.version>

		<!-- Sonar properties -->
		<sonar.jacoco.itReportPath>${project.build.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPath>${project.build.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<sonar.sources>${project.basedir}/src/main/</sonar.sources>
		<sonar.tests>${project.basedir}/src/test/</sonar.tests>
		<sonar.exclusions>
			**/src/main/java/com/saintgobain/dsi/pcpeg/PcpegApplication.java,
			**/src/main/java/com/saintgobain/dsi/pcpeg/web/controller/SwaggerController.java,
			**/src/main/java/com/saintgobain/dsi/pcpeg/config/*,
		</sonar.exclusions>
		<sonar.test.exclusions>
			**/test/**/*
		</sonar.test.exclusions>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>${spring-boot-admin-starter-client.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-afterburner</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate5</artifactId>
		</dependency>
        <dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
         <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-aop</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-elk</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-hazelcast</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-oracle</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-problem-spring-web</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-security</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>com.saintgobain.dsi.starter</groupId>
			<artifactId>delivery-starter-swagger</artifactId>
			<version>${saint-gobain.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${apache-poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${apache-poi-ooxml.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Database migration -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<!--Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.qualitycheck</groupId>
			<artifactId>quality-test</artifactId>
			<version>1.3</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${maven-eclipse-plugin.version}</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<rules>
						<requireMavenVersion>
							<message>You are running an older version of Maven. Project
								requires at least Maven 3.0
							</message>
							<version>[3.0.0,)</version>
						</requireMavenVersion>
						<requireJavaVersion>
							<message>You are running an older version of Java. Project
								requires at least JDK ${java.version}</message>
							<version>[${java.version},)</version>
						</requireJavaVersion>
					</rules>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<excludes>
								<exclude>**/Abstract*.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/com/saintgobain/dsi/pcpeg/config/*</exclude>
						<exclude>**/SwaggerController*</exclude>
						<exclude>**/WhiteAndYellowApplication*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage/jacoco/jacoco.exec</destFile>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage/jacoco/jacoco.exec</dataFile>
							<outputDirectory>${project.build.directory}/coverage/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>${swagger-maven-plugin.version}</version>
				<configuration>
					<apiSources>
						<apiSource>
							<springmvc>true</springmvc>
							<locations>com.saintgobain.dsi.pcpeg.web.rest</locations>
							<info>
								<title>SGDSI Pcpeg API</title>
								<version>1.0</version>
								<description>Pcpeg API documentation</description>
							</info>
							<swaggerDirectory>swagger</swaggerDirectory>
							<swaggerFileName>SGDSI_Pcpeg_API_UAT</swaggerFileName>
							<schemes>https</schemes>
							<host>pcpeg.uat.c1.api.dps.saint-gobain.com</host>
							<basePath>/</basePath>
							<outputFormats>json</outputFormats>
						</apiSource>
						<apiSource>
							<springmvc>true</springmvc>
							<locations>com.saintgobain.dsi.pcpeg.web.rest</locations>
							<info>
								<title>SGDSI Pcpeg API</title>
								<version>1.0</version>
								<description>Pcpeg API documentation</description>
							</info>
							<swaggerDirectory>swagger</swaggerDirectory>
							<swaggerFileName>SGDSI_Pcpeg_API_PROD</swaggerFileName>
							<schemes>https</schemes>
							<host>pcpeg.prod.c1.api.dps.saint-gobain.com</host>
							<basePath>/</basePath>
							<outputFormats>json</outputFormats>
						</apiSource>
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<localCheckout>true</localCheckout>
					<pushChanges>false</pushChanges>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
